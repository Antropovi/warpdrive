# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This config sets the following variables in your project::
#
#   WARPDRIVE_FULL_SO_VERSION - full shared library version of the found Warpdrive
#   WARPDRIVE_SO_VERSION - shared library version of the found Warpdrive
#   WARPDRIVE_VERSION - version of the found Warpdrive
#   WARPDRIVE_* - options used when the found Warpdrive is build such as WARPDRIVE_COMPUTE
#   Warpdrive_FOUND - true if Warpdrive found on the system
#
# This config sets the following targets in your project::
#
#   warpdrive_shared - for linked as shared library if shared library is built
#   warpdrive_static - for linked as static library if static library is built

@PACKAGE_INIT@

set(WARPDRIVE_VERSION "@WARPDRIVE_VERSION@")
set(WARPDRIVE_SO_VERSION "@WARPDRIVE_SO_VERSION@")
set(WARPDRIVE_FULL_SO_VERSION "@WARPDRIVE_FULL_SO_VERSION@")

set(WARPDRIVE_LIBRARY_PATH_SUFFIXES "@WARPDRIVE_LIBRARY_PATH_SUFFIXES@")
set(WARPDRIVE_INCLUDE_PATH_SUFFIXES "@WARPDRIVE_INCLUDE_PATH_SUFFIXES@")
set(WARPDRIVE_SYSTEM_DEPENDENCIES "@WARPDRIVE_SYSTEM_DEPENDENCIES@")
set(WARPDRIVE_BUNDLED_STATIC_LIBS "@WARPDRIVE_BUNDLED_STATIC_LIBS@")

include("${CMAKE_CURRENT_LIST_DIR}/WarpdriveOptions.cmake")

include(CMakeFindDependencyMacro)

# Load targets only once. If we load targets multiple times, CMake reports
# already existent target error.
if(NOT (TARGET warpdrive_shared OR TARGET warpdrive_static))
  include("${CMAKE_CURRENT_LIST_DIR}/WarpdriveTargets.cmake")

  endif()
endif()
